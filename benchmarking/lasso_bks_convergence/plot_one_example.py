import numpy as np
import matplotlib.pyplot as plt

exact = 0.6666841576085522

plt.axhline(exact, color="black", linestyle=":", label="Exact ALO")
# fill between interquartile range of test risk
xlim = np.asarray([0, 0.08])
ylim = np.asarray([0.65, 0.76])
aspect_ratio = (xlim[1] - xlim[0]) / (ylim[1] - ylim[0])

for angle in np.linspace(0, np.pi / 2, 9)[1:-1]:
    plt.plot(
        xlim,
        exact + np.tan(angle) * (xlim - xlim[0]) / aspect_ratio,
        color="black",
        linestyle=":",
        alpha=0.2,
    )

###############################################################################
# BKS Curve

bks_m = np.array([ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23,
                  24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38,
                  40, 41, 43, 45, 47, 50, 52, 55, 58, 62, 66, 71, 76, 83,
                  90, 100, 111, 125, 142, 166, 200, 250, 333, 500, 1000 ])
bks_risk = np.array([0.7851401606924572, 0.7713610042773759, 0.7604633949223298,
                     0.7473623332116652, 0.7440514928230526, 0.7360408328574306,
                     0.7317059965023821, 0.7280407837891615, 0.7241567474415795,
                     0.7229969038739839, 0.7178331275797731, 0.7113745451140014,
                     0.7094444893360862, 0.7069482191853939, 0.7048777399865359,
                     0.7017193940802102, 0.7020221457916078, 0.6999763940693934,
                     0.7003238538759994, 0.6974516455973664, 0.6971388657573996,
                     0.6962247176111039, 0.6948343538834483, 0.6927010415785847,
                     0.6920792006941388, 0.6909771220914688, 0.688809242976622,
                     0.6870546380684588, 0.6852944861844293, 0.684406620571574,
                     0.6831742401501002, 0.6824021887033216, 0.6804480192758078,
                     0.6801488591017932, 0.6800567135674331, 0.6789452273657476,
                     0.6774089841766121, 0.6779072410005041, 0.6768189245260423,
                     0.6765882745199553, 0.674885875843618, 0.6743719341144775,
                     0.674761393109263, 0.6737206349343563, 0.674454809385175,
                     0.6727567516878669, 0.671740871134143, 0.670698505499717,
                     0.6697884895342746, 0.6690855849718855, 0.6692047405105064,
                     0.6680665188331173, 0.6672898351445575,])
plt.plot(
    1/bks_m,
    bks_risk,
    linestyle='--',
    label='BKS-ALO',
)
##########################################################################


# Single Sketch

inv_ms = np.array([0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.0625    ,
              0.0625    , 0.0625    , 0.05882353, 0.05882353, 0.05882353,
              0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05263158,
              0.05263158, 0.05263158, 0.05      , 0.05      , 0.05      ,
              0.04761905, 0.04761905, 0.04761905, 0.04545455, 0.04545455,
              0.04545455, 0.04545455, 0.04347826, 0.04347826, 0.04347826,
              0.04166667, 0.04166667, 0.04166667, 0.04      , 0.04      ,
              0.04      , 0.03846154, 0.03846154, 0.03846154, 0.03846154,
              0.03703704, 0.03703704, 0.03703704, 0.03571429, 0.03571429,
              0.03571429, 0.03448276, 0.03448276, 0.03448276, 0.03333333])
risks = np.array([3623.6300955 , 3702.46086965, 3734.40514814, 3675.48645472,
              3670.89796697, 3632.68633866, 3653.02474014, 3666.83801028,
              3664.10485087, 3668.53930896, 3589.66201245, 3637.79436717,
              3599.09668147, 3651.98466999, 3600.32228633, 3578.93172612,
              3562.8742238 , 3567.22341046, 3572.87429352, 3575.25905042,
              3574.03697774, 3553.45300043, 3587.53802029, 3527.25895687,
              3536.48283542, 3561.26373189, 3584.34775265, 3560.16028679,
              3568.81414147, 3554.84418379, 3545.28633938, 3536.69480683,
              3544.99077265, 3516.83274434, 3552.48234503, 3496.19274377,
              3512.38240651, 3522.3687679 , 3523.40383816, 3504.79304176,
              3502.13388042, 3504.90511378, 3522.67420709, 3507.33933928,
              3508.73548514, 3507.06825487, 3493.99065246, 3492.08687893,
              3501.81280429, 3490.36361569]) / 5000
w = np.array([3292.08131387, 5873.52755497]) / 5000

[line2d] = plt.plot(
    np.linspace(0, 0.1),
    np.vander(np.linspace(0, 0.1), 2, True) @ w,
    label='$m=30$ line of best fit',
)

plt.scatter(
    inv_ms,
    risks,
    label='subsampled-sketch risks for m=30',
    color=line2d.get_color(),
)


inv_ms = np.array([0.04      , 0.04      , 0.03846154, 0.03846154, 0.03703704,
                   0.03703704, 0.03571429, 0.03571429, 0.03448276, 0.03448276,
                   0.03333333, 0.03333333, 0.03225806, 0.03225806, 0.03125   ,
                   0.03125   , 0.03030303, 0.03030303, 0.02941176, 0.02941176,
                   0.02857143, 0.02857143, 0.02777778, 0.02777778, 0.02702703,
                   0.02702703, 0.02631579, 0.02631579, 0.02564103, 0.02564103,
                   0.025     , 0.025     , 0.02439024, 0.02439024, 0.02380952,
                   0.02380952, 0.02325581, 0.02325581, 0.02272727, 0.02272727,
                   0.02222222, 0.02222222, 0.02173913, 0.02173913, 0.0212766 ,
                   0.0212766 , 0.02083333, 0.02083333, 0.02040816, 0.02      ])

risks = np.array([3498.54348982, 3523.03338677, 3499.892891  , 3512.83093777,
                  3466.28244952, 3477.67107397, 3471.00952082, 3482.95405323,
                  3477.99106963, 3470.18876317, 3487.27051889, 3507.85561273,
                  3462.8255875 , 3483.77628774, 3447.1151502 , 3466.61032851,
                  3461.12945087, 3439.49563918, 3444.53416898, 3423.68149226,
                  3443.14867226, 3454.15553333, 3441.09913286, 3421.56535423,
                  3430.39672024, 3431.31171564, 3439.73497225, 3438.51568312,
                  3438.80234594, 3427.48612042, 3415.04565812, 3442.95227054,
                  3412.95298509, 3419.79949664, 3416.64411817, 3425.05715343,
                  3419.45085793, 3407.72558733, 3410.82475155, 3414.77051308,
                  3423.45816518, 3421.52255356, 3392.004082  , 3408.92798226,
                  3415.76117281, 3405.41355706, 3405.37847544, 3407.77875578,
                  3405.28154779, 3400.74429551]) / 5000
w = np.array([3292.98379179, 5329.12757204]) / 5000

"""
plt.scatter(
    inv_ms,
    risks,
    label='subsampled-sketch risks for m=50',
)

plt.plot(
    np.linspace(0, 0.1),
    np.vander(np.linspace(0, 0.1), 2, True) @ w,
    label='$\hat{R}_0 + \hat{R}_1 / m$',
)
"""

inv_ms = np.array([0.02      , 0.01960784, 0.01923077, 0.01886792, 0.01851852,
              0.01818182, 0.01785714, 0.01754386, 0.01724138, 0.01694915,
              0.01666667, 0.01639344, 0.01612903, 0.01587302, 0.015625  ,
              0.01538462, 0.01515152, 0.01492537, 0.01470588, 0.01449275,
              0.01428571, 0.01408451, 0.01388889, 0.01369863, 0.01351351,
              0.01333333, 0.01315789, 0.01298701, 0.01282051, 0.01265823,
              0.0125    , 0.01234568, 0.01219512, 0.01204819, 0.01190476,
              0.01176471, 0.01162791, 0.01149425, 0.01136364, 0.01123596,
              0.01111111, 0.01098901, 0.01086957, 0.01075269, 0.0106383 ,
              0.01052632, 0.01041667, 0.01030928, 0.01020408, 0.01      ])
risks = np.array([3413.87816245, 3422.37546919, 3411.43080089, 3397.11278988,
              3411.8172044 , 3424.98130171, 3394.71842855, 3418.7146699 ,
              3416.53187718, 3424.81079178, 3427.02720887, 3384.73840028,
              3409.79115852, 3381.86785221, 3394.16905703, 3392.60889627,
              3391.88142436, 3391.56423926, 3398.54964347, 3392.42687426,
              3392.6405846 , 3387.74407553, 3392.0259501 , 3399.2188796 ,
              3384.19725311, 3387.47999624, 3389.61468203, 3378.16389908,
              3382.04744274, 3374.95567119, 3381.64264076, 3384.82883757,
              3388.54535432, 3388.78031656, 3379.84648986, 3384.75656536,
              3388.87783746, 3380.25011448, 3384.24436759, 3376.670694  ,
              3380.26512206, 3383.13853165, 3385.13678447, 3381.17133275,
              3375.92817001, 3372.20309826, 3379.35271425, 3374.70113864,
              3375.94478109, 3375.55656902]) / 5000
w = np.array([3331.11513687, 4347.93676532]) / 5000


[line2d] = plt.plot(
    np.linspace(0, 0.1),
    np.vander(np.linspace(0, 0.1), 2, True) @ w,
    label='$m=100$ line of best fit',
)
plt.scatter(
    inv_ms,
    risks,
    label='subsampled-sketch risks for m=100',
    color=line2d.get_color(),
)


##########################################################################
plt.xlim(xlim)
plt.ylim(ylim)

plt.title("Subsampled-sketch risk for one problem")
plt.xlabel("$1/m$")
plt.ylabel("Risk estimate")
plt.legend()

plt.show()
